<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 配置对应数据库 -->
    <bean id="processEngineConfiguration" class="org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration">
        <property name="jdbcDriver" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/activiti?characterEncoding=utf8"/>
        <property name="jdbcUsername" value="root"/>
        <property name="jdbcPassword" value="root"/>
         <!--
         设置 表创建规则
         databaseSchemaUpdate: 设置流程引擎启动和关闭时如何处理数据库表。
         false（默认）：检查数据库表的版本和依赖库的版本， 如果版本不匹配就抛出异常。
         true: 构建流程引擎时，执行检查，如果需要就执行更新。 如果表不存在，就创建。
         create-drop: 构建流程引擎时创建数据库表， 关闭流程引擎时删除这些表。
         -->
        <property name="databaseSchemaUpdate" value="true"/>
        <!-- 是否使用activiti自带用户：用视图替换activiti用户 -->
        <!--<property name="dbIdentityUsed" value="false"></property>-->
        <!-- 主键生成策略 UUID -->
        <!--<property name="idGenerator">-->
            <!--<bean class="org.activiti.engine.impl.persistence.StrongUuidGenerator" />-->
        <!--</property>-->
        <!-- 自定义主键生成策略 -->
        <property name="idGenerator"><bean class="TaskIdGenerator"/> </property>
    </bean>

    <!-- 使用工厂创建流程引擎对象 -->
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>


    <!-- 注入bean 方便直接调用 (可选) -->
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
</beans>